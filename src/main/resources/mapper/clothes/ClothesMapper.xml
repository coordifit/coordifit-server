<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.miracle.coordifit.clothes.repository.ClothesRepository">

  <!-- ========================================================= -->
  <!-- ResultMaps -->
  <!-- ========================================================= -->
  <resultMap id="ClothesMap" type="com.miracle.coordifit.clothes.model.Clothes">
    <id     property="clothesId"    column="CLOTHES_ID"/>
    <result property="userId"       column="USER_ID"/>
    <result property="name"         column="NAME"/>
    <result property="brand"        column="BRAND"/>
    <result property="categoryCode" column="CATEGORY_CODE"/>
    <result property="clothesSize"  column="CLOTHES_SIZE"/>
    <result property="price"        column="PRICE"/>
    <result property="purchaseDate" column="PURCHASE_DATE"/>
    <result property="purchaseUrl"  column="PURCHASE_URL"/>
    <result property="description"  column="DESCRIPTION"/>
    <result property="wearCount"    column="WEAR_COUNT"/>
    <result property="lastWornDate" column="LAST_WORN_DATE"/>
    <result property="isActive"     column="IS_ACTIVE"/>
    <result property="createdBy"    column="CREATED_BY"/>
    <result property="updatedBy"    column="UPDATED_BY"/>
  </resultMap>

  <resultMap id="FileInfoMap" type="com.miracle.coordifit.common.model.FileInfo">
    <id     property="fileId"       column="FILE_ID"/>
    <result property="originalName" column="ORIGINAL_NAME"/>
    <result property="s3Key"        column="S3_KEY"/>
    <result property="s3Url"        column="S3_URL"/>
    <result property="bucketName"   column="BUCKET_NAME"/>
    <result property="fileSize"     column="FILE_SIZE"/>
    <result property="fileType"     column="FILE_TYPE"/>
    <result property="uploadBy"     column="UPLOAD_BY"/>
    <result property="uploadDate"   column="UPLOAD_DATE"/>
  </resultMap>

  <!-- ========================================================= -->
  <!-- 공통/유틸 -->
  <!-- ========================================================= -->
<select id="selectNextClothesId" resultType="string">
  SELECT 'C' ||
         TO_CHAR(SYSDATE, 'YYMMDD') ||
         LPAD(
           NEXT_CLOTHES_NO,   <!-- ✅ 여기만 교체 -->
           3, '0'
         )
  FROM DUAL
</select>

  <!-- ========================================================= -->
  <!-- 등록/수정/삭제 -->
  <!-- ========================================================= -->
  <insert id="insertClothes" parameterType="com.miracle.coordifit.clothes.model.Clothes">
    INSERT INTO CLOTHES (
      CLOTHES_ID, USER_ID, NAME, BRAND, CATEGORY_CODE, CLOTHES_SIZE, PRICE,
      PURCHASE_DATE, PURCHASE_URL, DESCRIPTION, WEAR_COUNT, LAST_WORN_DATE,
      IS_ACTIVE, CREATED_BY, UPDATED_BY
    ) VALUES (
      #{clothesId}, #{userId}, #{name}, #{brand}, #{categoryCode}, #{clothesSize},
      #{price,jdbcType=NUMERIC},
      #{purchaseDate}, #{purchaseUrl}, #{description},
      NVL(#{wearCount,jdbcType=NUMERIC}, 0),
      #{lastWornDate},
      NVL(#{isActive}, 'Y'),
      #{createdBy}, #{updatedBy}
    )
  </insert>

<update id="updateClothes" parameterType="com.miracle.coordifit.clothes.model.Clothes">
  UPDATE CLOTHES
  <set>
    <if test="name != null">NAME = #{name},</if>
    <if test="brand != null">BRAND = #{brand},</if>
    <if test="categoryCode != null">CATEGORY_CODE = #{categoryCode},</if>
    <if test="clothesSize != null">CLOTHES_SIZE = #{clothesSize},</if>
    <if test="price != null">PRICE = #{price,jdbcType=NUMERIC},</if>
    <if test="purchaseDate != null">PURCHASE_DATE = #{purchaseDate},</if>
    <if test="purchaseUrl != null">PURCHASE_URL = #{purchaseUrl},</if>
    <if test="description != null">DESCRIPTION = #{description},</if>
    <if test="wearCount != null">WEAR_COUNT = #{wearCount,jdbcType=NUMERIC},</if>
    <if test="lastWornDate != null">LAST_WORN_DATE = #{lastWornDate},</if>
    UPDATED_BY = #{updatedBy},
    UPDATED_AT = CURRENT_TIMESTAMP
  </set>
  WHERE CLOTHES_ID = #{clothesId}
    AND NVL(IS_ACTIVE, 'Y') = 'Y'
</update>


  <update id="deleteClothes">
    UPDATE CLOTHES
       SET IS_ACTIVE = 'N',
           UPDATED_AT = CURRENT_TIMESTAMP
     WHERE CLOTHES_ID = #{clothesId}
       AND NVL(IS_ACTIVE,'Y') = 'Y'
  </update>

  <update id="deleteClothesByIds">
    UPDATE CLOTHES
       SET IS_ACTIVE = 'N',
           UPDATED_AT = CURRENT_TIMESTAMP
     WHERE CLOTHES_ID IN
     <foreach collection="ids" item="id" open="(" separator="," close=")">
       #{id}
     </foreach>
       AND NVL(IS_ACTIVE,'Y') = 'Y'
  </update>

  <!-- ========================================================= -->
  <!-- 이미지 링크 -->
  <!-- ========================================================= -->
  <insert id="insertImageLink" parameterType="com.miracle.coordifit.clothes.model.ClothesImageLink">
    INSERT INTO CLOTHES_IMAGES (
      CLOTHES_ID, FILE_ID, CREATED_AT, CREATED_BY
    ) VALUES (
      #{clothesId}, #{fileId,jdbcType=NUMERIC}, CURRENT_TIMESTAMP, #{createdBy}
    )
  </insert>

  <insert id="insertBulkImageLinks">
    INSERT ALL
    <foreach collection="links" item="l">
      INTO CLOTHES_IMAGES (CLOTHES_ID, FILE_ID, CREATED_AT, CREATED_BY)
      VALUES (#{l.clothesId}, #{l.fileId,jdbcType=NUMERIC}, CURRENT_TIMESTAMP, #{l.createdBy})
    </foreach>
    SELECT 1 FROM DUAL
  </insert>

  <delete id="deleteAllImageLinks">
    DELETE FROM CLOTHES_IMAGES
     WHERE CLOTHES_ID = #{clothesId}
  </delete>

  <delete id="deleteImageLink">
    DELETE FROM CLOTHES_IMAGES
     WHERE CLOTHES_ID = #{clothesId}
       AND FILE_ID    = #{fileId}
  </delete>

  <delete id="deleteImagesByClothesIds">
    DELETE FROM CLOTHES_IMAGES
     WHERE CLOTHES_ID IN
     <foreach collection="ids" item="id" open="(" separator="," close=")">
       #{id}
     </foreach>
  </delete>

  <select id="findImageLinks" resultType="com.miracle.coordifit.clothes.model.ClothesImageLink">
    SELECT CLOTHES_ID AS clothesId,
           FILE_ID    AS fileId,
           CREATED_BY AS createdBy
      FROM CLOTHES_IMAGES
     WHERE CLOTHES_ID = #{clothesId}
     ORDER BY FILE_ID ASC
  </select>

  <select id="countImageLinks" resultType="int">
    SELECT COUNT(*) FROM CLOTHES_IMAGES WHERE CLOTHES_ID = #{clothesId}
  </select>

  <select id="findImageFiles" resultMap="FileInfoMap">
    SELECT f.*
      FROM FILE_INFO f
      JOIN CLOTHES_IMAGES ci ON f.FILE_ID = ci.FILE_ID
     WHERE ci.CLOTHES_ID = #{clothesId}
     ORDER BY f.FILE_ID ASC
  </select>

  <!-- ========================================================= -->
  <!-- 조회 (DTO) -->
  <!-- ========================================================= -->
  
  <select id="findAllByUser" parameterType="string" resultMap="ClothesMap">
  SELECT
    c.CLOTHES_ID, c.USER_ID, c.NAME, c.BRAND, c.CATEGORY_CODE, c.CLOTHES_SIZE,
    c.PRICE, c.PURCHASE_DATE, c.PURCHASE_URL, c.DESCRIPTION,
    c.WEAR_COUNT, c.LAST_WORN_DATE, c.IS_ACTIVE, c.CREATED_BY, c.UPDATED_BY
  FROM CLOTHES c
  WHERE c.USER_ID = #{userId}
    AND NVL(c.IS_ACTIVE, 'Y') = 'Y'
  ORDER BY c.PURCHASE_DATE DESC NULLS LAST, c.CLOTHES_ID DESC
</select>

  <select id="findAllListByUser"
        parameterType="string"
        resultType="com.miracle.coordifit.clothes.dto.ClothesListItemDto">
  SELECT
    c.CLOTHES_ID    AS clothesId,
    c.NAME          AS name,
    c.CATEGORY_CODE AS categoryCode,
    c.PURCHASE_DATE AS purchaseDate,
    f.S3_URL        AS thumbnailUrl
  FROM CLOTHES c
  LEFT JOIN (
    SELECT ci.CLOTHES_ID, MIN(ci.FILE_ID) AS FILE_ID
      FROM CLOTHES_IMAGES ci
     GROUP BY ci.CLOTHES_ID
  ) rep ON rep.CLOTHES_ID = c.CLOTHES_ID
  LEFT JOIN FILE_INFO f ON f.FILE_ID = rep.FILE_ID
  WHERE c.USER_ID = #{userId}
    AND NVL(c.IS_ACTIVE,'Y') = 'Y'
  ORDER BY c.PURCHASE_DATE DESC NULLS LAST, c.CLOTHES_ID DESC
</select>
  
  <select id="findThumbnailUrl" parameterType="string" resultType="string">
  SELECT f.S3_URL
  FROM CLOTHES_IMAGES ci
  JOIN FILE_INFO f ON f.FILE_ID = ci.FILE_ID
  WHERE ci.CLOTHES_ID = #{clothesId}
  ORDER BY /* 대표 우선 규칙 없으면 FILE_ID 기준 */ ci.FILE_ID ASC
  FETCH FIRST 1 ROWS ONLY
</select>
  

  <select id="findDetailById" resultType="com.miracle.coordifit.clothes.dto.ClothesDetailDto">
    SELECT
      c.CLOTHES_ID     AS clothesId,
      c.NAME           AS name,
      c.CATEGORY_CODE  AS categoryCode,
      c.PURCHASE_DATE  AS purchaseDate,
      c.DESCRIPTION    AS description,
      c.BRAND          AS brand,
      c.CLOTHES_SIZE   AS clothesSize,
      c.PRICE          AS price,
      c.PURCHASE_URL   AS purchaseUrl,
      cc.CODE_NAME     AS categoryName,
      f.S3_URL         AS thumbnailUrl
    FROM CLOTHES c
    LEFT JOIN (
      SELECT ci.CLOTHES_ID, MIN(ci.FILE_ID) AS FILE_ID
        FROM CLOTHES_IMAGES ci
       GROUP BY ci.CLOTHES_ID
    ) rep ON rep.CLOTHES_ID = c.CLOTHES_ID
    LEFT JOIN FILE_INFO f     ON f.FILE_ID = rep.FILE_ID
    LEFT JOIN COMMON_CODES cc ON cc.CODE_ID = c.CATEGORY_CODE
   WHERE c.CLOTHES_ID = #{clothesId}
     AND NVL(c.IS_ACTIVE,'Y') = 'Y'
  </select>

  <select id="findAllClothes" resultType="com.miracle.coordifit.clothes.dto.ClothesDetailDto">
    SELECT
      c.CLOTHES_ID     AS clothesId,
      c.NAME           AS name,
      c.CATEGORY_CODE  AS categoryCode,
      c.PURCHASE_DATE  AS purchaseDate,
      c.DESCRIPTION    AS description,
      c.BRAND          AS brand,
      c.CLOTHES_SIZE   AS clothesSize,
      c.PRICE          AS price,
      c.PURCHASE_URL   AS purchaseUrl,
      cc.CODE_NAME     AS categoryName,
      f.S3_URL         AS thumbnailUrl
    FROM CLOTHES c
    LEFT JOIN (
      SELECT ci.CLOTHES_ID, MIN(ci.FILE_ID) AS FILE_ID
        FROM CLOTHES_IMAGES ci
       GROUP BY ci.CLOTHES_ID
    ) rep ON rep.CLOTHES_ID = c.CLOTHES_ID
    LEFT JOIN FILE_INFO f     ON f.FILE_ID = rep.FILE_ID
    LEFT JOIN COMMON_CODES cc ON cc.CODE_ID = c.CATEGORY_CODE
   WHERE NVL(c.IS_ACTIVE,'Y') = 'Y'
   ORDER BY c.PURCHASE_DATE DESC NULLS LAST, c.CLOTHES_ID DESC
  </select>

  <select id="findByCategory" resultType="com.miracle.coordifit.clothes.dto.ClothesDetailDto">
    SELECT
      c.CLOTHES_ID     AS clothesId,
      c.NAME           AS name,
      c.CATEGORY_CODE  AS categoryCode,
      c.PURCHASE_DATE  AS purchaseDate,
      c.DESCRIPTION    AS description,
      c.BRAND          AS brand,
      c.CLOTHES_SIZE   AS clothesSize,
      c.PRICE          AS price,
      c.PURCHASE_URL   AS purchaseUrl,
      cc.CODE_NAME     AS categoryName,
      f.S3_URL         AS thumbnailUrl
    FROM CLOTHES c
    LEFT JOIN (
      SELECT ci.CLOTHES_ID, MIN(ci.FILE_ID) AS FILE_ID
        FROM CLOTHES_IMAGES ci
       GROUP BY ci.CLOTHES_ID
    ) rep ON rep.CLOTHES_ID = c.CLOTHES_ID
    LEFT JOIN FILE_INFO f     ON f.FILE_ID = rep.FILE_ID
    LEFT JOIN COMMON_CODES cc ON cc.CODE_ID = c.CATEGORY_CODE
   WHERE NVL(c.IS_ACTIVE,'Y') = 'Y'
     AND EXISTS (
       SELECT 1 FROM COMMON_CODES sub
        WHERE sub.CODE_ID = c.CATEGORY_CODE
          AND sub.PARENT_CODE_ID = #{categoryId}
     )
   ORDER BY c.PURCHASE_DATE DESC NULLS LAST, c.CLOTHES_ID DESC
  </select>

  <select id="findBySubCategory" resultType="com.miracle.coordifit.clothes.dto.ClothesDetailDto">
    SELECT
      c.CLOTHES_ID     AS clothesId,
      c.NAME           AS name,
      c.CATEGORY_CODE  AS categoryCode,
      c.PURCHASE_DATE  AS purchaseDate,
      c.DESCRIPTION    AS description,
      c.BRAND          AS brand,
      c.CLOTHES_SIZE   AS clothesSize,
      c.PRICE          AS price,
      c.PURCHASE_URL   AS purchaseUrl,
      cc.CODE_NAME     AS categoryName,
      f.S3_URL         AS thumbnailUrl
    FROM CLOTHES c
    LEFT JOIN (
      SELECT ci.CLOTHES_ID, MIN(ci.FILE_ID) AS FILE_ID
        FROM CLOTHES_IMAGES ci
       GROUP BY ci.CLOTHES_ID
    ) rep ON rep.CLOTHES_ID = c.CLOTHES_ID
    LEFT JOIN FILE_INFO f     ON f.FILE_ID = rep.FILE_ID
    LEFT JOIN COMMON_CODES cc ON cc.CODE_ID = c.CATEGORY_CODE
   WHERE c.CATEGORY_CODE = #{subCategoryId}
     AND NVL(c.IS_ACTIVE,'Y') = 'Y'
   ORDER BY c.PURCHASE_DATE DESC NULLS LAST, c.CLOTHES_ID DESC
  </select>

  <select id="existsActiveCategoryCount" parameterType="string" resultType="int">
    SELECT COUNT(1)
      FROM COMMON_CODES
     WHERE CODE_ID = #{categoryCode}
       AND NVL(IS_ACTIVE,'Y') = 'Y'
  </select>

</mapper>
